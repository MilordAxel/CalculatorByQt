# Form implementation generated from reading ui file '.\calc.ui'
#
# Created by: PyQt6 UI code generator 6.3.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(320, 400)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMouseTracking(False)
        self.centralwidget.setStyleSheet("background-color: rgb(84, 84, 84);")
        self.centralwidget.setObjectName("centralwidget")
        self.btn_bracket_left = QtWidgets.QPushButton(self.centralwidget)
        self.btn_bracket_left.setGeometry(QtCore.QRect(0, 150, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_bracket_left.setFont(font)
        self.btn_bracket_left.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_bracket_left.setObjectName("btn_bracket_left")
        self.btn_bracket_right = QtWidgets.QPushButton(self.centralwidget)
        self.btn_bracket_right.setGeometry(QtCore.QRect(80, 150, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_bracket_right.setFont(font)
        self.btn_bracket_right.setMouseTracking(True)
        self.btn_bracket_right.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_bracket_right.setObjectName("btn_bracket_right")
        self.btn_clean = QtWidgets.QPushButton(self.centralwidget)
        self.btn_clean.setGeometry(QtCore.QRect(160, 150, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_clean.setFont(font)
        self.btn_clean.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_clean.setObjectName("btn_clean")
        self.btn_delete = QtWidgets.QPushButton(self.centralwidget)
        self.btn_delete.setGeometry(QtCore.QRect(240, 150, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.btn_delete.setFont(font)
        self.btn_delete.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_delete.setObjectName("btn_delete")
        self.btn_plus = QtWidgets.QPushButton(self.centralwidget)
        self.btn_plus.setGeometry(QtCore.QRect(240, 200, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_plus.setFont(font)
        self.btn_plus.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_plus.setObjectName("btn_plus")
        self.btn_7 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_7.setGeometry(QtCore.QRect(0, 200, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_7.setFont(font)
        self.btn_7.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_7.setObjectName("btn_7")
        self.btn_8 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_8.setGeometry(QtCore.QRect(80, 200, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_8.setFont(font)
        self.btn_8.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_8.setObjectName("btn_8")
        self.btn_9 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_9.setGeometry(QtCore.QRect(160, 200, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_9.setFont(font)
        self.btn_9.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_9.setObjectName("btn_9")
        self.btn_minus = QtWidgets.QPushButton(self.centralwidget)
        self.btn_minus.setGeometry(QtCore.QRect(240, 250, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_minus.setFont(font)
        self.btn_minus.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_minus.setObjectName("btn_minus")
        self.btn_4 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_4.setGeometry(QtCore.QRect(0, 250, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_4.setFont(font)
        self.btn_4.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_4.setObjectName("btn_4")
        self.btn_5 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_5.setGeometry(QtCore.QRect(80, 250, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_5.setFont(font)
        self.btn_5.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_5.setObjectName("btn_5")
        self.btn_6 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_6.setGeometry(QtCore.QRect(160, 250, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_6.setFont(font)
        self.btn_6.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_6.setObjectName("btn_6")
        self.btn_multiplication = QtWidgets.QPushButton(self.centralwidget)
        self.btn_multiplication.setGeometry(QtCore.QRect(240, 300, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_multiplication.setFont(font)
        self.btn_multiplication.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_multiplication.setObjectName("btn_multiplication")
        self.btn_1 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_1.setGeometry(QtCore.QRect(0, 300, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_1.setFont(font)
        self.btn_1.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_1.setObjectName("btn_1")
        self.btn_2 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_2.setGeometry(QtCore.QRect(80, 300, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_2.setFont(font)
        self.btn_2.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_2.setObjectName("btn_2")
        self.btn_3 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_3.setGeometry(QtCore.QRect(160, 300, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_3.setFont(font)
        self.btn_3.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_3.setObjectName("btn_3")
        self.btn_0 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_0.setGeometry(QtCore.QRect(80, 350, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_0.setFont(font)
        self.btn_0.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_0.setObjectName("btn_0")
        self.btn_division = QtWidgets.QPushButton(self.centralwidget)
        self.btn_division.setGeometry(QtCore.QRect(240, 350, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_division.setFont(font)
        self.btn_division.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_division.setObjectName("btn_division")
        self.btn_dot = QtWidgets.QPushButton(self.centralwidget)
        self.btn_dot.setGeometry(QtCore.QRect(0, 350, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_dot.setFont(font)
        self.btn_dot.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_dot.setObjectName("btn_dot")
        self.btn_result = QtWidgets.QPushButton(self.centralwidget)
        self.btn_result.setGeometry(QtCore.QRect(160, 350, 80, 50))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.btn_result.setFont(font)
        self.btn_result.setStyleSheet("background-color: rgb(180, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.btn_result.setObjectName("btn_result")
        self.lbl_number = QtWidgets.QLabel(self.centralwidget)
        self.lbl_number.setGeometry(QtCore.QRect(10, 60, 300, 80))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(36)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_number.setFont(font)
        self.lbl_number.setStyleSheet("color: rgb(255, 255, 255);")
        self.lbl_number.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.lbl_number.setObjectName("lbl_number")
        self.lbl_past_operations = QtWidgets.QLabel(self.centralwidget)
        self.lbl_past_operations.setGeometry(QtCore.QRect(10, 10, 301, 41))
        font = QtGui.QFont()
        font.setFamily("Miriam Mono CLM")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.lbl_past_operations.setFont(font)
        self.lbl_past_operations.setStyleSheet("color: rgb(255, 255, 255);")
        self.lbl_past_operations.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.lbl_past_operations.setObjectName("lbl_past_operations")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.bracketIsOpen = False
        self.button_clicked()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btn_bracket_left.setText(_translate("MainWindow", "("))
        self.btn_bracket_right.setText(_translate("MainWindow", ")"))
        self.btn_clean.setText(_translate("MainWindow", "C"))
        self.btn_delete.setText(_translate("MainWindow", "◄"))
        self.btn_plus.setText(_translate("MainWindow", "+"))
        self.btn_7.setText(_translate("MainWindow", "7"))
        self.btn_8.setText(_translate("MainWindow", "8"))
        self.btn_9.setText(_translate("MainWindow", "9"))
        self.btn_minus.setText(_translate("MainWindow", "-"))
        self.btn_4.setText(_translate("MainWindow", "4"))
        self.btn_5.setText(_translate("MainWindow", "5"))
        self.btn_6.setText(_translate("MainWindow", "6"))
        self.btn_multiplication.setText(_translate("MainWindow", "×"))
        self.btn_1.setText(_translate("MainWindow", "1"))
        self.btn_2.setText(_translate("MainWindow", "2"))
        self.btn_3.setText(_translate("MainWindow", "3"))
        self.btn_0.setText(_translate("MainWindow", "0"))
        self.btn_division.setText(_translate("MainWindow", "÷"))
        self.btn_dot.setText(_translate("MainWindow", "."))
        self.btn_result.setText(_translate("MainWindow", "="))
        self.lbl_number.setText(_translate("MainWindow", "0"))

    # This method react to click any button
    def button_clicked(self):
        # Buttons with numbers
        self.btn_0.clicked.connect(lambda: self.write_number(self.btn_0.text()))
        self.btn_1.clicked.connect(lambda: self.write_number(self.btn_1.text()))
        self.btn_2.clicked.connect(lambda: self.write_number(self.btn_2.text()))
        self.btn_3.clicked.connect(lambda: self.write_number(self.btn_3.text()))
        self.btn_4.clicked.connect(lambda: self.write_number(self.btn_4.text()))
        self.btn_5.clicked.connect(lambda: self.write_number(self.btn_5.text()))
        self.btn_6.clicked.connect(lambda: self.write_number(self.btn_6.text()))
        self.btn_7.clicked.connect(lambda: self.write_number(self.btn_7.text()))
        self.btn_8.clicked.connect(lambda: self.write_number(self.btn_8.text()))
        self.btn_9.clicked.connect(lambda: self.write_number(self.btn_9.text()))

        # Buttons with math operators
        self.btn_plus.clicked.connect(lambda: self.write_operator(self.btn_plus.text()))
        self.btn_minus.clicked.connect(lambda: self.write_operator(self.btn_minus.text()))
        self.btn_multiplication.clicked.connect(lambda: self.write_operator(self.btn_multiplication.text()))
        self.btn_division.clicked.connect(lambda: self.write_operator(self.btn_division.text()))

        # Buttons with auxiliary chars
        self.btn_dot.clicked.connect(lambda: self.write_char(self.btn_dot.text()))
        self.btn_bracket_right.clicked.connect(lambda: self.write_char(self.btn_bracket_right.text()))
        self.btn_bracket_left.clicked.connect(lambda: self.write_char(self.btn_bracket_left.text()))

        # Buttons that perform certain actions 
        self.btn_result.clicked.connect(lambda: self.result(self.btn_result.text()))
        self.btn_clean.clicked.connect(lambda: self.clean())
        self.btn_delete.clicked.connect(lambda: self.delete_char())

    # This method print numbers in bottom output area in main window
    def write_number(self, number):
        if self.lbl_number.text() == '0':
            self.lbl_number.setText(number)
        else:
            self.lbl_number.setText(self.lbl_number.text() + number)

    # This method print math operators and transpored number with operator in top output area in main window
    def write_operator(self, operator):
        if self.bracketIsOpen:
            self.lbl_number.setText(self.lbl_number.text() + operator)
        elif self.lbl_number.text():
            self.lbl_past_operations.setText(self.lbl_past_operations.text() + self.lbl_number.text() + operator)
            self.lbl_number.setText('')

    # This method print chars in bottom output area in main window
    def write_char(self, char):
        if char == '(':
            self.bracketIsOpen = True
            self.lbl_number.setText('(' + self.lbl_number.text())
        elif char == ')':
            self.bracketIsOpen = False
            self.lbl_number.setText(self.lbl_number.text() + char)
        else:
            self.lbl_number.setText(self.lbl_number.text() + char)

    # This method clean full output area in main window
    def clean(self):
        self.lbl_number.setText('0')
        self.lbl_past_operations.setText('')

    # This method delete one any char in low output area in main window
    def delete_char(self):
        self.lbl_number.setText(self.lbl_number.text()[0:-1])

    # This method calculated all expression in top output area in main window
    def result(self, result_char):
        self.lbl_past_operations.setText(self.lbl_past_operations.text() + self.lbl_number.text() + result_char)
        self.lbl_number.setText(str(eval(self.lbl_past_operations.text()[:-1].replace('×', '*').replace('÷', '/'))))
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
